<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>读论文（二）---“Regional Semantic Contrast and Aggregation for Weakly Supervised Semantic Segmentation”</title>
    <link href="/2022/12/31/%E8%AF%BB%E8%AE%BA%E6%96%87%EF%BC%88%E4%BA%8C%EF%BC%89---%E2%80%9CRegional%20Semantic%20Contrast%20and%20Aggregation%20for%20Weakly%20Supervised%20Semantic%20Segmentation%E2%80%9D/"/>
    <url>/2022/12/31/%E8%AF%BB%E8%AE%BA%E6%96%87%EF%BC%88%E4%BA%8C%EF%BC%89---%E2%80%9CRegional%20Semantic%20Contrast%20and%20Aggregation%20for%20Weakly%20Supervised%20Semantic%20Segmentation%E2%80%9D/</url>
    
    <content type="html"><![CDATA[<h1>读论文（二）—“Regional Semantic Contrast and Aggregation for Weakly Supervised Semantic Segmentation”</h1><p>原文链接：<a href="https://openaccess.thecvf.com/content/CVPR2022/papers/Zhou_Regional_Semantic_Contrast_and_Aggregation_for_Weakly_Supervised_Semantic_Segmentation_CVPR_2022_paper.pdf">https://openaccess.thecvf.com/content/CVPR2022/papers/Zhou_Regional_Semantic_Contrast_and_Aggregation_for_Weakly_Supervised_Semantic_Segmentation_CVPR_2022_paper.pdf</a></p><h2 id="一、该方法的创新点">一、该方法的创新点</h2><p>本文提出的方法（简称RCA）主要分为三个部分<br>（1）作者说之前的弱监督语义分割大多都是在“单个图像”内或者“图像对”进行的，本文则是在数据集级别上进行语义分割（这个数据集级别其实是用了对比学习中比较常见的记忆库机制（memory bank）。<br>（2）提出一种用于语义对比的鲁棒对比学习算法，该算法能够从不完美的伪区域特征中学习有效的表征。<br>（3）提出用于语义聚合的非参数注意力模型（这个注意力和transformer没关系），以从整个数据集收集丰富的上下文知识。<br>先放个整体框架图在这里，后文详细解释具体。<br><img src="/img/%E8%AF%BB%E8%AE%BA%E6%96%87%EF%BC%88%E4%BA%8C%EF%BC%89img1.jpg" alt="图一"></p><h2 id="二、框架中的方法详解">二、框架中的方法详解</h2><h3 id="（一）伪区域表征">（一）伪区域表征</h3><p>一个小批次I，我们先通过一个全卷积网络（FCN）获得I的密集表征，再将这个表征经过生成CAM图的卷积层，生成激活图P（论文中的公式1）。再通过一个掩膜平均池化操作（MAP）将区域语义信息变成压缩过的特征向量fl（fl由论文中的公式2得出）<br>补：加公式，加解释</p><h3 id="（二）伪区域记忆库">（二）伪区域记忆库</h3><p>作者为区域对比聚合方法（RCA）建立了一个非参数且进行动量更新的记忆库，以存储数据集级别的区域语义信息。记忆库M由L个字典组成，即M={M1，M2，··，ML}，每个字典对应一个类别。Ml的每个条目表示图像I中的第l类的整体区域表征ml。记忆库在反向传播时更新，图像I的当前特征向量fl将被动量地更新到ml中（公式2）补：公式3。且在第l类的得分高出阈值γ时，即pl&gt;γ时，更新ml。作者还在这一节说了他们的记忆库的独特性（个人觉得这一段是在自卖自夸，没有实际的理论或者说证据，没有什么说服力）。</p><h3 id="（三）区域语义对比（RSC）">（三）区域语义对比（RSC）</h3><p>图像I中的第l类特征向量fl与记忆库中第l类向量ml进行对比（fl和ml互为正样本，最大化他们的相似性，最小化fl和记忆库中非l类的向量的相似性）。补：公式4<br>作者还说他们的正负样本都是有噪声的，这样直接对比不太好（这些正负样本，都是从CAM图生成的，CAM图生成的语义区域本身就不准确，所以说这些样本都是有噪声的）。于是，作者提出了区域混合（region mixup）来正则化。具体怎么做呢？作者说对于图像I中的每个区域l，将l与该批次的其他图像中的区域l-进行线性组合（l与l-是不同的类别区域）补：公式5<br>新的损失函数为 补：公式6  ，这个损失能鼓励网络学习混合区域的相对相似性。</p><h3 id="（三）区域语义聚合（RSA）">（三）区域语义聚合（RSA）</h3><p>区域语义聚合（RSA）的主要思想就是将记忆库中的表征压缩为具有代表性的原型，压缩的方法就是K-means聚类，其实就是对存在记忆库里面的所有特征向量进行聚类，将各个类中的所有特征向量的共性信息提取出来，作为原型。其中，作者说我一个类不止一个原型，我有K个，因为我考虑到每个类的类内还有变化（举个例子，一个大类是狗，但是狗还可以细分为不同品种，论文中的K个原型就对应K个品种）。做完聚类后，作者又将所有分类原型进行拼接（concat），变成全局的原型表征Q。<br>那么接下来开始计算亲和度矩阵S，这个矩阵S是用原型表征Q和一开始FCN给出的F进行计算的，先将F和Q的转置进行矩阵乘法，在计算他们的softmax，得到亲和度矩阵S,S中的每个条目反映了F中的每一行（特征）与Q的转置中的每一列（原型）之间的标准化相似度。<br>再基于亲和度矩阵S,再和原型特征Q进行矩阵相乘，得出具有上下文语义的特征F’，这个F’是F的丰富化表征。将F’和F进行concat得到F-hat,F-hat包含图像中的上下文语义和图像间的上下文语义（个人理解F给出图像中语义，F’给出图像间语义）。</p><h3 id="（三）最终的类激活图预测">（三）最终的类激活图预测</h3><p>补：公式10</p><h2 id="三、具体的网络架构">三、具体的网络架构</h2><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo>=</mo><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E=mc^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
    
    
    
    <tags>
      
      <tag>weakly supervised semantic segmentation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>读论文（一）---“Learning Pixel-Level Semantic Affinity with Image-Level Supervision for Weakly Supervised Semantic Segmentation”</title>
    <link href="/2022/12/29/%E8%AF%BB%E8%AE%BA%E6%96%87%EF%BC%88%E4%B8%80%EF%BC%89---%E2%80%9CLearning%20Pixel-Level%20Semantic%20Affinity%20with%20Image-Level%20Supervision%20for%20Weakly%20Supervised%20Semantic%20Segmentation%E2%80%9D/"/>
    <url>/2022/12/29/%E8%AF%BB%E8%AE%BA%E6%96%87%EF%BC%88%E4%B8%80%EF%BC%89---%E2%80%9CLearning%20Pixel-Level%20Semantic%20Affinity%20with%20Image-Level%20Supervision%20for%20Weakly%20Supervised%20Semantic%20Segmentation%E2%80%9D/</url>
    
    <content type="html"><![CDATA[<h1>读论文（一）—“Learning Pixel-Level Semantic Affinity with Image-Level Supervision for Weakly Supervised Semantic Segmentation”</h1><p>原文链接：<a href="https://openaccess.thecvf.com/content_cvpr_2018/papers/Ahn_Learning_Pixel-Level_Semantic_CVPR_2018_paper.pdf">https://openaccess.thecvf.com/content_cvpr_2018/papers/Ahn_Learning_Pixel-Level_Semantic_CVPR_2018_paper.pdf</a></p><h2 id="一、该方法的主要框架">一、该方法的主要框架</h2><p>本文提出的方法主要分为三个部分</p><p>（1）作者提出了一个语义亲和度网络（文中的AffinityNet），首先通过原始图像生成CAM图，再用CAM图所提供的目标区域信息生成语义亲和度标签（说白了就是一张图里有蓝天白云，白云区域里面的像素两两的语义亲和度都很高，而白云区域里面抽出来一个像素，蓝天区域里面抽出来一个像素，这两个像素他们之间的语义亲和度就很低，具体后文会解释如何判断语义亲和度高低），有了语义亲和度标签以后就可以结合原始图片去训练这个语义亲和网络（AffinityNet），如下图所示。</p><p><img src="/img/%E8%AF%BB%E8%AE%BA%E6%96%87%EF%BC%88%E4%B8%80%EF%BC%89img1.jpg" alt="图一"></p><p>（2）经过训练的语义亲和度网络（AffinityNet）反过来预测局部图像区域内的语义相似性，这些语义相似性与随机游走相结合以修改CAM图，并生成语义分割标签。</p><p><img src="/img/%E8%AF%BB%E8%AE%BA%E6%96%87%EF%BC%88%E4%B8%80%EF%BC%89img2.jpg" alt="图二"></p><p>（3）用生成的语义分割标签去训练分割网络</p><p><img src="/img/%E8%AF%BB%E8%AE%BA%E6%96%87%EF%BC%88%E4%B8%80%EF%BC%89img3.jpg" alt="图三"></p><h2 id="二、框架中的方法详解">二、框架中的方法详解</h2><h3 id="（一）CAM图的生成">（一）CAM图的生成</h3><p>论文中作者说</p>]]></content>
    
    
    
    <tags>
      
      <tag>weakly supervised semantic segmentation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>my blog</title>
    <link href="/2022/12/03/my-blog/"/>
    <url>/2022/12/03/my-blog/</url>
    
    <content type="html"><![CDATA[<p>你好，世界！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/11/30/hello-world/"/>
    <url>/2022/11/30/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
